apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: pipeline-release-please
  annotations:
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/task: "git-clone"
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      - name: release-please
        runAfter:
          - fetch-repository
        workspaces:
          - name: source
            workspace: source
        taskSpec:
          results:
            - name: release-created
              description: True if a new release was created, false otherwise
            - name: release-tag
              description: The tag name of the release if one was created
            - name: release-id
              description: The ID of the release if one was created
          steps:
            - name: create-release
              image: quay.io/pabrahamsson/release-please:17.0.0-4
              workingDir: $(workspaces.source.path)
              args:
                - github-release
                - --repo-url=pabrahamsson/rpmostree_exporter
                - --token=$(GH_TOKEN)
              env:
                - name: GH_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: github-token
                      key: token
            - name: create-release-pr
              image: quay.io/pabrahamsson/release-please:17.0.0-4
              env:
                - name: GH_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: github-token
                      key: token
              workingDir: $(workspaces.source.path)
              script: |
                #!/usr/bin/env bash
                RELEASE_RESULT=$(release-please release-pr --repo-url=pabrahamsson/rpmostree_exporter --token=$GH_TOKEN)

                # Check if a new release was created
                if [[ "$RELEASE_RESULT" == *"created release"* ]]; then
                  echo -n "true" | tee "$(results.release-created.path)"
                  echo
                  echo "New GitHub release was created."
                else
                  echo -n "false" | tee "$(results.release-created.path)"
                  echo
                  echo "No new GitHub release was needed."
                fi

                LATEST_RELEASE=$(curl -s -H "Authorization: token $GH_TOKEN" \
                  "https://api.github.com/repos/pabrahamsson/rpmostree_exporter/releases/latest")

                TAG_NAME=$(echo $LATEST_RELEASE | jq -r '.tag_name')
                RELEASE_NAME=$(echo $LATEST_RELEASE | jq -r '.name')
                RELEASE_ID=$(echo $LATEST_RELEASE | jq -r '.id')

                echo -n "$TAG_NAME" | tee "$(results.release-tag.path)"
                echo -n "$RELEASE_ID" | tee "$(results.release-id.path)"
          workspaces:
            - name: source
      - name: upload-release-artifacts
        runAfter:
          - release-please
        workspaces:
          - name: source
            workspace: source
        taskSpec:
          params:
            - name: release-created
              value: $(tasks.release-please.results.release-created)
              default: "false"
            - name: release-tag
              value: $(tasks.release-please.results.release-tag)
              default: "v0.0.0"
          steps:
            - name: upload-release-artifacts-if-release-created
              image: quay.io/pabrahamsson/gh-cli:2.72.0-1
              env:
                - name: GITHUB_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: github-token
                      key: token
              workingDir: $(workspaces.source.path)
              script: |
                #/usr/bin/env bash
                set -e

                echo "release-created: $(params.release-created)"
                echo "release-tag: $(params.release-tag)"

                if [[ "$(params.release-created)" != "true" ]]; then
                  echo "No new release created, skipping artifact upload."
                  exit 0
                else
                  gh release upload $(params.release-tag) ./bin/rpmostree_exporter_linux_amd64
                  gh release upload $(params.release-tag) ./bin/rpmostree_exporter_linux_arm64
                  gh release upload $(params.release-tag) ./bin/rpmostree_exporter_checksums.txt
                fi
          workspaces:
            - name: source
  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
